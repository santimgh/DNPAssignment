@inject IPostsService postsService;
@inject IUserService userService;
@attribute [Authorize]

@page "/ViewAllPosts"
@using Httplients.ClientInterfaces
@using global::Shared.Models
@using global::Shared.DTOs

<h3>Posts</h3>

    <div>
        <button @onclick="LoadPosts">Load</button>
    </div>
    
    
    @if (posts == null)
    {
    }
    else if (!posts.Any())
    {
        <h2>No Posts to display</h2>
    }
    else
    {
        @foreach (var item in posts)
            {
                <div class="card">
                    <a href="@($"post/{item.postId}")">@item.Title</a>
                </div>
            }
            
    }
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }

@code {

    private IEnumerable<Post>? posts;
    private int? logedUserId;
    private string postTitle = "";
    private string body = "";


    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            await userService.GetAsync(null, logedUserId, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task LoadPosts()
    {
        try
        {
            posts = await postsService.GetAsync(null, null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

}